syntax = "proto2";

import "rustproto.proto";
option (rustproto.generate_accessors_all) = true;


package basic;

message Test1 {
    required int32 a = 1;
}

message Test2 {
    required string b = 2;
}

message Test3 {
    required Test1 c = 3;
}

message TestRecursion {
    repeated TestRecursion children = 1;
}

message Test4 {
    repeated int32 d = 4 [packed=true];
}

message TestEmpty {
    optional int32 foo = 10;
}

message TestUnknownFields {
    required int32 a = 1;
}

// just check it compiles
message TestSelfReference {
    required TestSelfReference r1 = 1;
    optional TestSelfReference r2 = 2;
}

message TestDefaultInstanceField {
    optional string s = 1;
}

message TestDefaultInstance {
    optional TestDefaultInstanceField field = 1;
}

message TestDescriptor {
    optional int32 stuff = 10;
}

enum TestEnumDescriptor {
    UNDEFINED = 0;
    RED = 1;
    BLUE = 2;
    GREEN = 3;
}

message TestInvalidTag {
}

message TestTruncated {
    repeated fixed32 ints = 2 [packed=true];
}

message TestBugSint {
    optional sint32 s32 = 1;
    optional sint64 s64 = 2;
}
